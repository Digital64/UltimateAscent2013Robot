// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.


package org.usfirst.frc2877.UltimateAscent2013Robot.subsystems;

import org.usfirst.frc2877.UltimateAscent2013Robot.RobotMap;
import org.usfirst.frc2877.UltimateAscent2013Robot.commands.*;
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.CounterBase.EncodingType;
import edu.wpi.first.wpilibj.Encoder.PIDSourceParameter;
import edu.wpi.first.wpilibj.can.*;

import edu.wpi.first.wpilibj.command.Subsystem;
import org.usfirst.frc2877.UltimateAscent2013Robot.Robot;


/**
 *
 */
public class Shooter extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    CANJaguar shooterFrontWheel = RobotMap.shooterShooterFrontWheel;
    CANJaguar shooterBackWheel = RobotMap.shooterShooterBackWheel;
    CANJaguar shooterAngle = RobotMap.shooterShooterAngle;
//    Encoder shooterAngleEncoder = RobotMap.shooterShooterAngleEncoder;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static final double ANGLESPEEDCONSTANT = .1;
    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    
    public void Shooter() {
        System.out.println("Shooter constructed.");
    }

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
    
    public void runShooterAngle(double y) {
        try {
        shooterAngle.setX(y*ANGLESPEEDCONSTANT);
        } catch (CANTimeoutException ex) {
        System.out.println("Timeout Exception on shooterAngle.setX in runShooterAngle");
        }
        
    }
}

